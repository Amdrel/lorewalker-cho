#!/usr/bin/env python3
#
# Lorewalker Cho is a Discord bot that plays WoW-inspired trivia games.
# Copyright (C) 2019  Walter Kuppens
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

import argparse
import csv


def generate_questions_file(input_file, output_file):
    """Maps a TSV questions file to a python file."""

    with open(input_file, "r") as tsvin, open(output_file, "w") as pyout:
        pyout.write("# ==================================\n")
        pyout.write("# >>> THIS FILE IS AUTOGENERATED <<<\n")
        pyout.write("# ==================================\n\n")
        pyout.write("DEFAULT_QUESTIONS = [\n")

        for index, row in enumerate(csv.reader(tsvin, delimiter="\t")):
            if index == 0:
                continue

            topic = row[0]
            question = row[1].replace("\"", "\\\"")
            answers = "[" + ", ".join(
                ["\"{}\"".format(x.strip().replace("\"", "\\\""))
                 for x in row[2].split(",")]) + "]"

            pyout.write("    {\n")
            pyout.write("        \"topic\": \"{}\",\n".format(topic))
            pyout.write("        \"text\": \"{}\",\n".format(question))
            pyout.write("        \"answers\": {},\n".format(answers))
            pyout.write("    },\n")

            # For when things go utterly wrong, uncomment to inspect data.
            #
            # print("Topic: " + topic)
            # print("Question: " + question)
            # print("Answers: " + str(answers))
            # print("")

        pyout.write("]\n")


def main():
    """Generates a questions file from a TSV spreadsheet."""

    parser = argparse.ArgumentParser(
        description="Generates a questions file from a TSV spreadsheet.")
    parser.add_argument(
        "-i",
        "--input",
        required=True,
        help="The TSV file to generate the questions file from.")
    parser.add_argument(
        "-o",
        "--output",
        required=True,
        help="Specify an output location for the questions file.")
    args = parser.parse_args()

    generate_questions_file(args.input, args.output)


if __name__ == "__main__":
    main()
